# 利用GitHub Action自动构建多框架的docker镜像
name: Build

on:
  # main分支的push操作会触发当前脚本的执行
 push:
   branches: [ main ]
  # main分支的pr操作会触发当前脚本的执行
#  pull_request:
#    branches: [ main ]
  # 定时任务,分时日月年,为国际标准时间16点,对应中国时间0点
  # schedule:
  #   - cron: '0 16 * * *'
  # 点击star时开始任务
  # watch:
  #   types: started


jobs:
  Build:
    # 运行在Ubuntu系统上
    runs-on: ubuntu-latest
    # 步骤
    steps:
      # 检出当前分支
      - name: Checkout
        uses: actions/checkout@main

      # 初始化一些参数
      - name: Prepare
        id: prepare
        # IMAGE_NAME ： 镜像名称
        # ALI_ADD ：阿里镜像地址
        # GITHUB_VERSION ： 源码版本
        # DOCKERHUB_VERSION ： DockerHub 镜像版本
        # TAG_VERSION ： 标签版本 zzcabc/pixivbiu:2.2.0a
        # TAG_LATEST ： 最新版本 zzcabc/pixivbiu:latest
        # ALI_VERSION ：
        # ALI_LATEST :
        run: |
          IMAGE_NAME=pixivbiu-test
          ALI_ADD=registry.cn-hangzhou.aliyuncs.com
          GITHUB_VERSION=$(curl -sX GET "https://api.github.com/repos/txperl/PixivBiu/releases/latest" | awk '/tag_name/{print $4;exit}' FS='[""]')
          DOCKERHUB_VERSION=$(cat currentVersion)
          echo ${GITHUB_VERSION}
          echo ${DOCKERHUB_VERSION}
          TAG_VERSION="${{ secrets.DOCKERHUB_USERNAME }}/${IMAGE_NAME}:${GITHUB_VERSION}"
          TAG_LATEST="${{ secrets.DOCKERHUB_USERNAME }}/${IMAGE_NAME}:latest"
          ALI_VERSION="${ALI_ADD}/${{ secrets.ALIYUN_NAMESPACES }}/${IMAGE_NAME}:${GITHUB_VERSION}"
          ALI_LATEST="${ALI_ADD}/${{ secrets.ALIYUN_NAMESPACES }}/${IMAGE_NAME}:latest"
          echo "GITHUB_VERSION=$GITHUB_VERSION" >> $GITHUB_OUTPUT
          echo "DOCKERHUB_VERSION=$DOCKERHUB_VERSION" >> $GITHUB_OUTPUT
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "TAG_LATEST=$TAG_LATEST" >> $GITHUB_OUTPUT
          echo "ALI_VERSION=$ALI_VERSION" >> $GITHUB_OUTPUT
          echo "ALI_LATEST=$ALI_LATEST" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 初始化Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 登录到DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 登录到阿里镜像仓库
      - name: Login To Alibaba Cloud Container Registry
        run: |
          docker login -u ${{ secrets.ALIYUN_USERNAME }} -p ${{ secrets.ALIYUN_PWD }} registry.cn-hangzhou.aliyuncs.com

      # 构建并且推送
      - name: BuildSrc and Push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64/v8
          file: ./Dockerfile.test
          context: .
          push: true
          tags: |
            ${{ steps.prepare.outputs.TAG_VERSION }}-src
            ${{ steps.prepare.outputs.TAG_LATEST }}-src
            ${{ steps.prepare.outputs.ALI_VERSION }}-src
            ${{ steps.prepare.outputs.ALI_LATEST }}-src

      # # 构建并且推送
      # - name: BuildPyinstaller and Push
      #   uses: docker/build-push-action@v3
      #   with:
      #     platforms: linux/amd64,linux/arm64/v8
      #     file: ./Dockerfile.pyinstallerbuild
      #     context: .
      #     push: true
      #     tags: |
      #       ${{ steps.prepare.outputs.TAG_VERSION }}
      #       ${{ steps.prepare.outputs.TAG_LATEST }}
      #       ${{ steps.prepare.outputs.ALI_VERSION }}
      #       ${{ steps.prepare.outputs.ALI_LATEST }}
      
      # # 初始化版本号与git 
      # - name: commit
      #   run: |
      #     echo "${{ steps.prepare.outputs.GITHUB_VERSION }}" > currentVersion
      #     git config --global user.name zhaocheng
      #     git config --global user.email zhaocheng990105@gmail.com
      #     git add currentVersion
      #     git commit -m "当前版本是:${{ steps.prepare.outputs.GITHUB_VERSION }}" -a
      
      # # 推送版本号到GitHub 
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.TOKEN_GITHUB }}